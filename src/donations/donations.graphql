scalar DateTime

type Donation {
  # Example field (placeholder)
  id: Int!
  count: Int!
  displayName: String!
  email: String!
  mobile: String
  team: String
  message: String
  createdAt: DateTime
}

input CreateDonationInput {
  # Example field (placeholder)
  count: Int!
  displayName: String!
  email: String!
  mobile: String
  team: String
  message: String
  createdAt: DateTime
}

# input UpdateDonationInput {
#   id: Int!
# }

export class OrderByParams {
  field?: Nullable<string>
  direction?: Nullable<string>
}

type Query {
  donations(orderBy: OrderByParams): [Donation]!
  donation(id: Int!): Donation
}

type Mutation {
  createDonation(createDonationInput: CreateDonationInput!): Donation!
  # updateDonation(updateDonationInput: UpdateDonationInput!): Donation!
  # removeDonation(id: Int!): Donation
}
